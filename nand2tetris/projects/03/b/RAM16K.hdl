// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way (in=load, sel=address[0..1], a=r0Load, b=r1Load, c=r2Load, d=r3Load);
        RAM4K (in=in[0..15], load=r0Load, address=address[2..13], out=r0Out);
        RAM4K (in=in[0..15], load=r1Load, address=address[2..13], out=r1Out);
        RAM4K (in=in[0..15], load=r2Load, address=address[2..13], out=r2Out);
        RAM4K (in=in[0..15], load=r3Load, address=address[2..13], out=r3Out);
        Mux4Way16 (a=r0Out, b=r1Out, c=r2Out, d=r3Out, sel=address[0..1], out=out);

}
